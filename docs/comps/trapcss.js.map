{
  "version": 3,
  "file": "docs/comps/trapcss.js",
  "lineCount": 5,
  "mappings": "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",
  "sources": [
    "/splendid/components/yarn.jsx",
    "/splendid/comps/trapcss.js",
    "/splendid/comps/__rename-maps/styles/yarn.js"
  ],
  "sourcesContent": [
    "import { h } from '@externs/preact'\nexport default class Yarn {\n  static 'plain'() {\n    return true\n  }\n  constructor(el) {\n    this.el = el\n  }\n  render({ ...props }) {\n    // read cookies for the manager choice\n  }\n  /**\n   * @param {Object} p\n   * @param {Splendid} p.splendid\n   */\n  serverRender({ splendid, log, debug, logError, setChildContext, children, ...props }) {\n    splendid.export(props)\n    splendid.css('styles/yarn.css', '.Manager')\n    let [child] = children\n    child = child.trim()\n    const p = Object.keys(props)\n    if (child) p.push(child)\n    return (h('span',{'className':\"Manager\"},`yarn `,p.join(' ')))\n  }\n}\n\n/**\n * @typedef {import('splendid')} Splendid\n */",
    "import __initOnThisPage from './__init/on-this-page'\nimport __initSidebar from './__init/sidebar'\nimport __renameMap0 from './__rename-maps/styles/yarn'\nimport __renameMap1 from './__rename-maps/styles/sidebar'\nimport __renameMap2 from './__rename-maps/styles/on-this-page'\nimport makeClassGetter from './__mcg'\nconst renameMaps = { 'styles/yarn.css': __renameMap0,\n  'styles/sidebar.css': __renameMap1,\n  'styles/on-this-page.css': __renameMap2 }\n__initOnThisPage(),__initSidebar()\nimport { Component, render, h } from '@externs/preact'\nimport { makeIo, init, start } from './__competent-lib'\nimport AkashicEmails from '../components/akashic-emails.jsx'\nimport AkashicUpdates from '../components/akashic-updates.jsx'\nimport GithubBadge from '../components/github-badge.jsx'\nimport Highlightjs from 'splendid/build/components/highlightjs'\nimport SocialButtons from 'splendid/build/components/social-buttons'\nimport Yarn from '../components/yarn.jsx'\n\nconst __components = {\n  'akashic-emails': AkashicEmails,\n  'akashic-updates': AkashicUpdates,\n  'github-badge': GithubBadge,\n  'highlightjs': Highlightjs,\n  'social-buttons': SocialButtons,\n  'yarn': Yarn,\n}\n\nconst io = makeIo()\n\n/** @type {!Array<!preact.PreactProps>} */\nconst meta = [{\n  key: 'yarn',\n  id: 'c824f',\n  props: {\n    doc: true,\n  },\n},\n{\n  key: 'highlightjs',\n  id: 'c724c,c724c1,c724c2',\n  props: {\n    lang: 'shell',\n  },\n},\n{\n  key: 'yarn',\n  id: 'c6a16',\n  props: {\n    mask: true,\n  },\n},\n{\n  key: 'highlightjs',\n  id: 'c16f7,c16f71',\n  props: {\n    lang: 'xml',\n  },\n},\n{\n  key: 'social-buttons',\n  id: 'c485b',\n  props: {\n    url: 'https://art-deco.github.io/nodetools/trapcss-nodetools-tutorial.html',\n    meta: true,\n    className: 'b-xq b-Hk',\n  },\n},\n{\n  key: 'github-badge',\n  id: 'c1dbc',\n  props: {\n    owner: 'artdecocode',\n    name: 'trapcss',\n  },\n},\n{\n  key: 'yarn',\n  id: 'cbabb',\n  props: {\n    'bin-alias': true,\n  },\n},\n{\n  key: 'highlightjs',\n  id: 'c1953,c19531,c19532,c19533,c19534,c19535',\n  props: {\n    lang: 'markdown',\n  },\n},\n{\n  key: 'akashic-updates',\n  id: 'updates-div',\n  props: {\n    class: 'mb-3',\n    'api-key': 'akashic',\n  },\n},\n{\n  key: 'github-badge',\n  id: 'cacd9',\n  props: {\n    owner: 'art-deco',\n    name: 'nodetools',\n  },\n},\n{\n  key: 'highlightjs',\n  id: 'ccdbf,ccdbf1,ccdbf10,ccdbf11,ccdbf12,ccdbf13,ccdbf14,ccdbf15,ccdbf16,ccdbf17,ccdbf18,ccdbf2,ccdbf3,ccdbf4,ccdbf5,ccdbf6,ccdbf7,ccdbf8,ccdbf9',\n  props: {\n    lang: 'javascript',\n  },\n},\n{\n  key: 'akashic-emails',\n  id: 'emails-div',\n  props: {\n    'api-key': 'akashic',\n  },\n},\n{\n  key: 'yarn',\n  id: 'c651c,c651c1,c651c2',\n  props: {\n    d: true,\n  },\n},\n{\n  key: 'yarn',\n  id: 'cb985',\n  props: {\n    doc: true,\n    '-p': true,\n  },\n  children: [\"\\\"commit message\\\"\"],\n},\n{\n  key: 'yarn',\n  id: 'c1b02',\n  children: [\"[spec|mask|test]\"],\n},\n{\n  key: 'highlightjs',\n  id: 'c1d47',\n  props: {\n    lang: 'css',\n  },\n},\n{\n  key: 'highlightjs',\n  id: 'c414d,c414d1,c414d2,c414d3,c414d4,c414d5,c414d6',\n  props: {\n    lang: 'bash',\n  },\n},\n{\n  key: 'yarn',\n  id: 'c093b',\n  props: {\n    alanode: true,\n  },\n  children: [\"src/dropcss \"],\n},\n{\n  key: 'highlightjs',\n  id: 'cf541,cf5411,cf5412,cf5413,cf5414,cf5415,cf5416,cf5417,cf5418,cf5419',\n  props: {\n    lang: 'scss',\n  },\n},\n{\n  key: 'highlightjs',\n  id: 'cb288',\n  props: {\n    lang: 'undefined',\n  },\n}]\nmeta.forEach(({ key, id, props = {}, children = [] }) => {\n  const Comp = __components[key]\n  const plain = Comp.plain || (/^\\s*class\\s+/.test(Comp.toString()) && !Component.isPrototypeOf(Comp))\n  props.splendid = { mount: '/nodetools/', addCSS(stylesheet) {\n    return makeClassGetter(renameMaps[stylesheet])\n  } }\n\n  const ids = id.split(',')\n  ids.forEach((Id) => {\n    const { parent, el } = init(Id, key)\n    if (!el) return\n    const renderMeta = /** @type {_competent.RenderMeta} */ ({ key, id: Id, plain })\n    let comp\n    el.render = () => {\n      comp = start(renderMeta, Comp, comp, el, parent, props, children, { render, Component, h })\n      return comp\n    }\n    el.render.meta = renderMeta\n    io.observe(el)\n  })\n})\n",
    "export default {}"
  ],
  "names": [
    "constructor",
    "Yarn",
    "el",
    "render",
    "renameMaps",
    "__renameMap0",
    "__renameMap1",
    "__renameMap2",
    "__initOnThisPage",
    "__initSidebar",
    "__components",
    "AkashicEmails",
    "AkashicUpdates",
    "GithubBadge",
    "Highlightjs",
    "SocialButtons",
    "io",
    "makeIo",
    "meta",
    "key",
    "id",
    "props",
    "doc",
    "lang",
    "mask",
    "url",
    "className",
    "owner",
    "name",
    "class",
    "d",
    "children",
    "alanode",
    "forEach",
    "Comp",
    "plain",
    "test",
    "toString",
    "Component",
    "isPrototypeOf",
    "splendid",
    "mount",
    "addCSS",
    "stylesheet",
    "makeClassGetter",
    "split",
    "ids",
    "Id",
    "init",
    "parent",
    "renderMeta",
    "comp",
    "el.render",
    "start",
    "observe"
  ]
}